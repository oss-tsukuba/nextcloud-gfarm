#! /bin/bash

set -eu -o pipefail

mode="$1"
gfarm_path="$2"
mountpoint="$3"
auth_type="$4"
gfarm_conf="$5"
x509proxy="$6"
trace_id="$7"

lockfile="${mountpoint}.lock"

facility="local7"

: ${GFARM_ATTR_CACHE_TIMEOUT:="60"}
: ${FUSE_ENTRY_TIMEOUT:="60"}
: ${FUSE_NEGATIVE_TIMEOUT:="5"}
: ${FUSE_ATTR_TIMEOUT:="60"}
: ${GFARM2FS_LOGLEVEL:="info"}

MNT_OPT="-o loglevel=${GFARM2FS_LOGLEVEL},nonempty,modules=subdir,entry_timeout=${FUSE_ENTRY_TIMEOUT},negative_timeout=${FUSE_NEGATIVE_TIMEOUT},attr_timeout=${FUSE_ATTR_TIMEOUT},gfs_stat_timeout=${GFARM_ATTR_CACHE_TIMEOUT},auto_cache,big_writes"

[ -z "${gfarm_conf}" ] && exit 1

GFARM_CONFIG_FILE="${gfarm_conf}"
export GFARM_CONFIG_FILE

if [ -n "${x509proxy}" ]; then
    X509_PROXY_CERT="${x509proxy}"
    export X509_PROXY_CERT
fi

LOG_DEBUG()
{
    logger -p ${facility}.debug "$0" "[${trace_id}]DEBUG: $@"
}

LOG_ERR()
{
    logger -p ${facility}.err "$0" "[${trace_id}]ERR: $@"
}

LOG_DEBUG "$@"

remount=0
case "$mode" in
    MOUNT)
        ;;
    REMOUNT)
        remount=1
        ;;
    CHECK_AUTH)
        case "$auth_type" in
            sharedsecret)
                LOG_DEBUG "gfkey -e"
                gfkey -e > /dev/null 2>&1
                exit $?
                ;;
            gsi|myproxy)
                LOG_DEBUG "grid-proxy-info"
                grid-proxy-info > /dev/null 2>&1
                exit $?
                ;;
            *)
                LOG_ERR "unknown auth_type: $auth_type"
                exit 1
                ;;
        esac
        ;;
    *)
        LOG_ERR "unknown mode: $mode"
        exit 1
        ;;
esac


lock_expired()
{
    min=1
    num=$(find "$lockfile" -maxdepth 0 -type d -mmin +${min} > /dev/null 2>&1 | wc -l)
    if [ -e "$lockfile" -a  $num -eq 1 ]; then
        return 0  # expired
    fi
    return 1
}

lock_and_wait()
{
    while ! mkdir "$lockfile" > /dev/null 2>&1; do
        if lock_expired; then
            break
        fi
        LOG_DEBUG "wait for other mount"
        sleep 1
    done
    return 0
}

unlock()
{
    rmdir "$lockfile" || :
}

check_mount_quick()
{
    # check quickly
    for mp in $(mount -t fuse.gfarm2fs | cut -d " " -f 3- | awk -F" type fuse" '{print $1}'); do
        if [ "$mountpoint" = "$mp" ]; then
            LOG_DEBUG "already mounted: $mountpoint"
            exit 0
        fi
    done
}

check_mount()
{
    # check carefully
    dfout=$(df "$mountpoint" | tail -1)
    fstype=$(echo "$dfout" | awk '{print $1}')
    mp=$(echo "$dfout" | xargs | cut -d ' ' -f 6-)
    if [ "$fstype" = "gfarm2fs" ]; then
        if [ "$mountpoint" = "$mp" ]; then
            LOG_DEBUG "already mounted: $mountpoint"
            exit 0
        else
            LOG_ERR "unexpected: mountpoint=${mountpoint} != $mp"
            exit 1
        fi
    fi
    # not mounted
}

# shortcut
check_mount_quick

trap unlock EXIT

lock_and_wait
# recheck in lock
check_mount

if [ $remount -eq 1 ]; then
    LOG_DEBUG "umount when remount=1"
    fusermount -u "${mountpoint}"
fi
gfarm2fs ${MNT_OPT} -o subdir="${gfarm_path}" "${mountpoint}"
retval=$?
if [ $retval -ne 0 ]; then
    LOG_ERR "gfarm2fs mount failed: mountpoint=${mountpoint}"
fi
exit $retval
